prometheus:
  prometheusSpec:
    podMonitorSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    storageSpec:
      emptyDir:
        medium: memory
grafana:
  extraSecretMounts:
    - name: auth-generic-oauth-secret-mount
      secretName: grafana-oidc
      defaultMode: 0440
      mountPath: /etc/secrets/auth_generic_oauth
      readOnly: true
  grafana.ini:
    server:
      root_url: https://grafana.hnatekmar.dev
      auth:
        signout_redirect_url: "https://keycloak.infra.hnatekmar.dev/realms/master/protocol/openid-connect/logout/"
        oauth_auto_login: true
      auth.generic_oauth:
        name: keycloak
        enabled: true
        client_id: "$__file{/etc/secrets/auth_generic_oauth/client_id}"
        client_secret: "$__file{/etc/secrets/auth_generic_oauth/client_secret}"
        scopes: "openid profile email"
        auth_url: "https://keycloak.infra.hnatekmar.dev/realms/master/protocol/openid-connect/auth/"
        token_url: "https://keycloak.infra.hnatekmar.dev/realms/master/protocol/openid-connect/token/"
        api_url: "https://keycloak.infra.hnatekmar.dev/realms/master/protocol/openid-connect/userinfo/"
        role_attribute_path: contains(groups, 'admins') && 'Admin' || contains(groups, 'users') && 'Editor' || 'Viewer'
  ingress:
    enabled: true
    hosts:
      - grafana.hnatekmar.dev
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-cloudflare
      kubernetes.io/ingress.class: nginx
    tls:
    - secretName: grafana-tls
      hosts:
        - grafana.hnatekmar.dev
crds:
  enabled: true
  upgradeJob:
    enabled: true
